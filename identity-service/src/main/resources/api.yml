# Example OpenAPI spec using YAML
# Be aware that YAML has indentation based scoping.
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
# Generate client & server code stubs using http://editor.swagger.io/#/
swagger: '2.0'

info:
  version: "0.0.1"
  title: Identity Service API

paths:
  /user:
    get:
      description: Gets the controller by UserID.
      operationId: getUser
      parameters:
      - in: query
        name: userid
        description: ID of controller
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/User'
  /login:
    post:
      description: Login controller with credentials.
      operationId: loginUser
      parameters:
        - in: body
          name: credentials
          description: User object that needs to be registered to Nimble.
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      produces:
      - application/json
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/CompanyRegistration'
        401:
          description: Login failed

  /registerCompany:
    post:
      description: Register company with admin controller.
      operationId: registerCompany
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: company
          description: Company object that needs to be registered to Nimble.
          required: true
          schema:
            $ref: "#/definitions/CompanyRegistration"
      responses:
        201:
          description: Company registered
          schema:
            $ref: '#/definitions/CompanyRegistration'
        405:
          description: Company not registered

  /register:
    post:
      summary: Register a new controller to the nimble.
      description: ""
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: controller
          description: User object that needs to be registered to Nimble.
          required: true
          schema:
            $ref: "#/definitions/UserToRegister"
      responses:
        201:
          description: User created
          schema:
            $ref: '#/definitions/User'
        405:
          description: User not registered

definitions:
  User:
    title: User Object
    type: object
    properties:
      username:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      jobTitle:
        type: string
      email:
        type: string
      dateOfBirth:
        type: string
        format: date
      placeOBirth:
        type: string
      legalDomain:
        type: string
      phoneNumber:
        type: string
  UserToRegister:
    allOf:
      - $ref: '#/definitions/User' # UserToRegister has all properties of a User.
    properties: # extra properties only for registration
        password:
          type: string

  Company:
    title: Company on Nimble
    type: object
    properties:
      address:
        type: string

  Credentials:
    title: Credentials of controller
    type: object
    properties:
      email:
        type: string
      password:
        type: string

  CompanyRegistration:
    title: Company registration object
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      jobTitle:
        type: string
      email:
        type: string
      dateOfBirth:
        type: string
      placeOfBirth:
        type: string
      legalDomain:
        type: string
      phoneNumber:
        type: string
      userID:
        type: string
      companyName:
        type: string
      companyAddress:
        type: string
      companyCountry:
        type: string
      companyID:
        type: string